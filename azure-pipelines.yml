# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

name: $(Version.MajorMinor)$(Rev:.r)

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  Version.MajorMinor: 1.0.0

steps:
- task: NuGetToolInstaller@0

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(solution)'
    feedsToUse: 'select'
    versioningScheme: 'off'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '$(solution)'
    zipAfterPublish: true
    publishWebProjects: false
    arguments: --runtime win-x86

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/XboxFtpUploader.1.0.0.$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: true

# - task: PowerShell@2
#   displayName: "Publish to Feedz.io"
#   inputs:
#     targetType: 'inline'
#     script: '
#     write-output $(feedz-io-apikey)
#     nuget.exe push -Source "https://f.feedz.io/nrjsolutions/release-apps" -ApiKey $(feedz-io-apikey) "$(Build.ArtifactStagingDirectory)/XboxFtpUploader.1.0.0.$(Build.BuildId).zip"'

# - task: cURLUploader@2
#   inputs:
#     files: ''
#     authType: 'UserAndPass'
#     username: 'bob'
#     password: '$(feedz-io-apikey)'
#     url: 'https://f.feedz.io/nrjsolutions/release-apps'
#     remotePath: 

- task: AzureFileCopy@3
  inputs:
    SourcePath: '$(Build.ArtifactStagingDirectory)/XboxFtpUploader.1.0.0.$(Build.BuildId).zip'
    azureSubscription: 'Visual Studio Professional with MSDN(17a33520-a372-4e0f-b2de-d5ee24faa7af)'
    Destination: 'AzureBlob'
    storage: 'nrjsolutions'
    ContainerName: 'xboxftpuploader'